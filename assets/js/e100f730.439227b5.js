"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[257],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},p=Object.keys(e);for(r=0;r<p.length;r++)t=p[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)t=p[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,p=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=s(t),f=o,d=u["".concat(c,".").concat(f)]||u[f]||m[f]||p;return t?r.createElement(d,a(a({ref:n},l),{},{components:t})):r.createElement(d,a({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var p=t.length,a=new Array(p);a[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<p;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8935:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>p,metadata:()=>i,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const p={id:"popper",title:"Popper",sidebar_label:"Popper",slug:"/components/popper"},a=void 0,i={unversionedId:"components/popper",id:"components/popper",title:"Popper",description:"A popper component that allows composing a set of elements that are thrown across the screen.",source:"@site/docs/components/popper.mdx",sourceDirName:"components",slug:"/components/popper",permalink:"/react-native-fiesta/docs/components/popper",draft:!1,editUrl:"https://github.com/mateoguzmana/react-native-fiesta/tree/main/docs/docs/components/popper.mdx",tags:[],version:"current",frontMatter:{id:"popper",title:"Popper",sidebar_label:"Popper",slug:"/components/popper"},sidebar:"tutorialSidebar",previous:{title:"Hearts",permalink:"/react-native-fiesta/docs/components/hearts"},next:{title:"Stars",permalink:"/react-native-fiesta/docs/components/stars"}},c={},s=[{value:"Simple Popper",id:"simple-popper",level:3}],l={toc:s};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A popper component that allows composing a set of elements that are thrown across the screen."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#simple-popper"},"Simple Popper"))),(0,o.kt)("h3",{id:"simple-popper"},"Simple Popper"),(0,o.kt)("p",null,"You can define a custom Skia element and render it within the ",(0,o.kt)("inlineCode",{parentName:"p"},"Popper"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { StyleSheet } from 'react-native';\nimport { Canvas, Circle } from '@shopify/react-native-skia';\nimport { Popper, PopperDirection } from 'react-native-fiesta';\n\nfunction App() {\n  return (\n    <Canvas style={styles.canvas}>\n      <Popper\n          direction={PopperDirection.Ascending}\n          spacing={10}\n          renderItem={({ x, y, colors }, index) => (\n            <Circle\n              key={`circle-${index}`}\n              cx={x}\n              cy={y}\n              r={10}\n              color={colors[index]}\n            />\n          )}\n          positionSpringConfig={{\n            stiffness: 100,\n            damping: 100,\n            mass: 11000,\n          }}\n          fadeSpringConfig={{\n            stiffness: 1,\n            damping: 1,\n            mass: 1000,\n          }}\n        />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  canvas: {\n    flex: 1,\n  },\n});\n")))}m.isMDXComponent=!0}}]);