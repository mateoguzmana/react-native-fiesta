"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[97],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=m(n),f=r,u=c["".concat(p,".").concat(f)]||c[f]||d[f]||o;return n?a.createElement(u,i(i({ref:t},s),{},{components:n})):a.createElement(u,i({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},300:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const o={id:"emojis",title:"Emojis",sidebar_label:"Emojis",slug:"/components/emojis"},i=void 0,l={unversionedId:"components/emojis",id:"components/emojis",title:"Emojis",description:"A set of animated emojis.",source:"@site/docs/components/emojis.mdx",sourceDirName:"components",slug:"/components/emojis",permalink:"/react-native-fiesta/docs/components/emojis",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/emojis.mdx",tags:[],version:"current",frontMatter:{id:"emojis",title:"Emojis",sidebar_label:"Emojis",slug:"/components/emojis"},sidebar:"tutorialSidebar",previous:{title:"Balloons",permalink:"/react-native-fiesta/docs/components/balloons"},next:{title:"Fireworks",permalink:"/react-native-fiesta/docs/components/fireworks"}},p={},m=[{value:"Emoji Fonts",id:"emoji-fonts",level:3},{value:"Emoji Popper",id:"emoji-popper",level:3},{value:"Single emoji",id:"single-emoji",level:3}],s={toc:m};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A set of animated emojis."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#emoji-popper"},"Emoji Popper")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#single-emoji"},"Single Emoji"))),(0,r.kt)("h3",{id:"emoji-fonts"},"Emoji Fonts"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/hfg-gmuend/openmoji/blob/master/font/OpenMoji-Color.ttf"},"OpenMoji")," is used in the examples as a font for the example but you can use any other emoji font. Example NotoColorEmoji or OpenSansEmoji (not as nice but lighter)."),(0,r.kt)("p",null,"The font is not directly integrated into Fiesta because it is a heavy file and not everyone needs it, hence you have to pass it yourself from your application."),(0,r.kt)("h3",{id:"emoji-popper"},"Emoji Popper"),(0,r.kt)("p",null,"The emoji popper allows you to pass either a single or multiple emojis and then the emoji popper will distribute the emojis across the screen to give a nice and simple animation."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"emojis?"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Array of emojis (default is ",(0,r.kt)("inlineCode",{parentName:"td"},"['\ud83c\udf89']"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#emoji-fonts"},"font")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"SkFont")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Font to use for the emojis.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"spacing?"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Space between items horizontally (default is 30).")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { StyleSheet, View } from 'react-native';\nimport { useFont } from '@shopify/react-native-skia';\nimport { EmojiPopper } from 'react-native-fiesta';\n\nfunction App() {\n  const font = useFont(require('./fonts/OpenMoji-Color.ttf'), 30);\n\n  return (\n    <View style={styles.container}>\n      <EmojiPopper emojis={['\ud83e\udd20', '\ud83c\udf88', '\ud83c\udf89', '\ud83c\udf7b']} font={font} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n")),(0,r.kt)("h3",{id:"single-emoji"},"Single emoji"),(0,r.kt)("p",null,"You can also use a single emoji. Notice that you need to wrap the emoji with a ",(0,r.kt)("inlineCode",{parentName:"p"},"Canvas"),", not doing this will crash the application since we need to run the animation inside a ",(0,r.kt)("inlineCode",{parentName:"p"},"Canvas"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"x?"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Initial x position of the emoji (default is 0).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"y?"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Initial y position of the emoji (default is 0).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"autoHide?"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether the emoji should hide (fade out) automatically or not (default is true).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"emoji?"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Emoji to display (default is ",(0,r.kt)("inlineCode",{parentName:"td"},"'\ud83c\udf89'"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#emoji-fonts"},"font")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"SkFont")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Font to use for the emojis.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { StyleSheet } from 'react-native';\nimport { Canvas } from '@shopify/react-native-skia';\nimport { Emoji } from 'react-native-fiesta';\n\nfunction App() {\n  return (\n    <Canvas style={styles.canvas}>\n      <Emoji emoji=\"\ud83c\udf89\" x={15} y={50} autoplay={false} font={font} />\n    </Canvas>\n  );\n}\n\nconst styles = StyleSheet.create({\n  canvas: {\n    flex: 1,\n  },\n});\n")))}d.isMDXComponent=!0}}]);